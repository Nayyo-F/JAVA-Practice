
package nayyoo;
import java.util.Scanner;

class Student{
String name;
static int age;
int id;
double[] salary; 
 double total = 0;

 Scanner input = new Scanner(System.in);
 
//constructor
Student(){

}

//Method overridding
class Parent {
    void show()
    {
        System.out.println("Parent's show()");
    }
}
  
// Inherited class
class Child extends Parent {
    // This method overrides show() of Parent
    @Override
    void show()
    {
        System.out.println("Child's show()");
    }
}

// Method Overloading
static int overload(int x, double y){
    System.out.println("Hello World");
    return 2;
}

static void overload(int x){
    System.out.println("Hello Class");
    
}



// getters and setters
public String getName(){
return this.name;
}

public void setName(String name){
this.name = name;
}

// Total income class
public double salary(){
    System.out.println("Enter the incomes of the Students: ");
    for (int i = 0; i < salary.length; i++ ){
    salary[i] = input.nextDouble();
    }
    
    System.out.println("Total income: ");
    for (int i = 0; i < salary.length; i++ ){
    total += salary[i];
    }
    
return total;
}

}

public class NewClass {
     public static void main(String[] args) {
        Student info = new Student();
        
        info.setName("Software Engineering");
         System.out.println(info.getName());
         
        // Calculate total income
         Student income = new Student();
         income.salary();
         
         // If a Parent type reference refers
		// to a Parent object, then Parent's
		// show is called
		Parent obj1 = new Parent();
		obj1.show();

		// If a Parent type reference refers
		// to a Child object Child's show()
		// is called. This is called RUN TIME
		// POLYMORPHISM.
		Parent obj2 = new Child();
		obj2.show();
         
         
         
         
     }
}
